#include <iostream>
using namespace std;

class Complex {
private:
    double real;
    double imag;

public:
    Complex(double r = 0, double i = 0) : real(r), imag(i) {}

    // Overloading addition operator
    Complex operator+(const Complex& other) {
        return Complex(real + other.real, imag + other.imag);
    }

    // Overloading subtraction operator
    Complex operator-(const Complex& other) {
        return Complex(real - other.real, imag - other.imag);
    }

    // Overloading pre-increment operator
    Complex operator++() {
        ++real;
        ++imag;
        return *this;
    }

    // Overloading pre-decrement operator
    Complex operator--() {
        --real;
        --imag;
        return *this;
    }

    // Overloading comparison operator
    bool operator==(const Complex& other) {
        return (real == other.real && imag == other.imag);
    }

    // Function to display the complex number
    void display() {
        cout << real << " + " << imag << "i" << endl;
    }
};

int main() {
    Complex c1(2, 3);
    Complex c2(4, 5);

    Complex c3 = c1 + c2;
    c3.display();

    Complex c4 = c2 - c1;
    c4.display();

    ++c1;
    c1.display();

    --c2;
    c2.display();

    if (c1 == c2) {
        cout << "c1 and c2 are equal.\n";
    } else {
        cout << "c1 and c2 are not equal.\n";
    }

    return 0;
}
